{
  "manifestVersion": "3.1",
  "impls": {
    "34c95b68e89fa088cdfadd814aa9b29caa8c585a82c4a5a0d6517fd7164f2c0b": {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x10550bc422411f90c145b3c418b8d051953df0a60d536a7de0e81a264ee35461",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTx",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTx.sol:110"
          },
          {
            "contract": "VNFTx",
            "label": "vnft",
            "type": "t_contract(IVNFT)14705",
            "src": "contracts/VNFTx.sol:112"
          },
          {
            "contract": "VNFTx",
            "label": "muse",
            "type": "t_contract(IMuseToken)14540",
            "src": "contracts/VNFTx.sol:113"
          },
          {
            "contract": "VNFTx",
            "label": "addons",
            "type": "t_contract(IERC1155)1685",
            "src": "contracts/VNFTx.sol:114"
          },
          {
            "contract": "VNFTx",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:116"
          },
          {
            "contract": "VNFTx",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1721_storage)",
            "src": "contracts/VNFTx.sol:131"
          },
          {
            "contract": "VNFTx",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTx.sol:133"
          },
          {
            "contract": "VNFTx",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTx.sol:134"
          },
          {
            "contract": "VNFTx",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:137"
          },
          {
            "contract": "VNFTx",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:138"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:141"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:142"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:143"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:144"
          },
          {
            "contract": "VNFTx",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:147"
          },
          {
            "contract": "VNFTx",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:148"
          },
          {
            "contract": "VNFTx",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:149"
          },
          {
            "contract": "VNFTx",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:150"
          },
          {
            "contract": "VNFTx",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:152"
          },
          {
            "contract": "VNFTx",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:154"
          },
          {
            "contract": "VNFTx",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTx.sol:157"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)14705": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)14540": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1685": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1721_storage)": {
            "label": "mapping(uint256 => struct VNFTx.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "899f67eb85b5d14e68daa1b62df640f4369da5a2cadf892550be39804c12c2a1": {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0x43f7fa6a615caebcea08f1d67604e59edd289029d98a8359c600660eea283893",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV2.sol:114"
          },
          {
            "contract": "VNFTxV2",
            "label": "vnft",
            "type": "t_contract(IVNFT)4949",
            "src": "contracts/VNFTxV2.sol:116"
          },
          {
            "contract": "VNFTxV2",
            "label": "muse",
            "type": "t_contract(IMuseToken)4784",
            "src": "contracts/VNFTxV2.sol:117"
          },
          {
            "contract": "VNFTxV2",
            "label": "addons",
            "type": "t_contract(IERC1155)1302",
            "src": "contracts/VNFTxV2.sol:118"
          },
          {
            "contract": "VNFTxV2",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:120"
          },
          {
            "contract": "VNFTxV2",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1338_storage)",
            "src": "contracts/VNFTxV2.sol:135"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV2.sol:137"
          },
          {
            "contract": "VNFTxV2",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV2.sol:138"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:141"
          },
          {
            "contract": "VNFTxV2",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:142"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:145"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:146"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:147"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:148"
          },
          {
            "contract": "VNFTxV2",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:151"
          },
          {
            "contract": "VNFTxV2",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:152"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:153"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:154"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:156"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:158"
          },
          {
            "contract": "VNFTxV2",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV2.sol:161"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)4949": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)4784": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1302": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1338_storage)": {
            "label": "mapping(uint256 => struct VNFTxV2.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "3ed455a94009aedd071f5ec9fb71c85f0d350d597c4a826ca89245850335012a": {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x213b6f60792cd2a561227071e3950e9950a29711d5ac6d1d7bbeaceb3ece4ec3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV3",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV3.sol:114"
          },
          {
            "contract": "VNFTxV3",
            "label": "vnft",
            "type": "t_contract(IVNFT)7043",
            "src": "contracts/VNFTxV3.sol:116"
          },
          {
            "contract": "VNFTxV3",
            "label": "muse",
            "type": "t_contract(IMuseToken)6878",
            "src": "contracts/VNFTxV3.sol:117"
          },
          {
            "contract": "VNFTxV3",
            "label": "addons",
            "type": "t_contract(IERC1155)3388",
            "src": "contracts/VNFTxV3.sol:118"
          },
          {
            "contract": "VNFTxV3",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:120"
          },
          {
            "contract": "VNFTxV3",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)3424_storage)",
            "src": "contracts/VNFTxV3.sol:135"
          },
          {
            "contract": "VNFTxV3",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV3.sol:137"
          },
          {
            "contract": "VNFTxV3",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV3.sol:138"
          },
          {
            "contract": "VNFTxV3",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV3.sol:141"
          },
          {
            "contract": "VNFTxV3",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV3.sol:142"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:145"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:146"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:147"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:148"
          },
          {
            "contract": "VNFTxV3",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:151"
          },
          {
            "contract": "VNFTxV3",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:152"
          },
          {
            "contract": "VNFTxV3",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:153"
          },
          {
            "contract": "VNFTxV3",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:154"
          },
          {
            "contract": "VNFTxV3",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:156"
          },
          {
            "contract": "VNFTxV3",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:158"
          },
          {
            "contract": "VNFTxV3",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV3.sol:161"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)7043": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)6878": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)3388": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)3424_storage)": {
            "label": "mapping(uint256 => struct VNFTxV3.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "371dc739a2dcbf050de9a0b62eccce1c9f95904d72f9d118df08d511198f7a21": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x2e84db53433cc004d07ed4e63f52f88d9dcc9f518d3cc32a75a6b0d110e0b723",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV4",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV4.sol:114"
          },
          {
            "contract": "VNFTxV4",
            "label": "vnft",
            "type": "t_contract(IVNFT)3177",
            "src": "contracts/VNFTxV4.sol:116"
          },
          {
            "contract": "VNFTxV4",
            "label": "muse",
            "type": "t_contract(IMuseToken)3012",
            "src": "contracts/VNFTxV4.sol:117"
          },
          {
            "contract": "VNFTxV4",
            "label": "addons",
            "type": "t_contract(IERC1155)1302",
            "src": "contracts/VNFTxV4.sol:118"
          },
          {
            "contract": "VNFTxV4",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:120"
          },
          {
            "contract": "VNFTxV4",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1338_storage)",
            "src": "contracts/VNFTxV4.sol:135"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV4.sol:137"
          },
          {
            "contract": "VNFTxV4",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV4.sol:138"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:141"
          },
          {
            "contract": "VNFTxV4",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:142"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:145"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:146"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:147"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:148"
          },
          {
            "contract": "VNFTxV4",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:151"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:152"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:153"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:154"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:156"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:158"
          },
          {
            "contract": "VNFTxV4",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV4.sol:161"
          },
          {
            "contract": "VNFTxV4",
            "label": "cashbackPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:165"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpLostOnBattle",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:185"
          },
          {
            "contract": "VNFTxV4",
            "label": "timesAttacked",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:186"
          },
          {
            "contract": "VNFTxV4",
            "label": "toReceiveCashback",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VNFTxV4.sol:188"
          },
          {
            "contract": "VNFTxV4",
            "label": "alreadyReceivedCashback",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:189"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)3177": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)3012": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1302": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1338_storage)": {
            "label": "mapping(uint256 => struct VNFTxV4.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "f3662b29d3a0de5107bbeb8724c4827cd7937661356fd42d22dae265599137f0": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x0d8509e12b07f000b3eb4959d5e43eb7ac66471a89f0927561256676920551b6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV4",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV4.sol:114"
          },
          {
            "contract": "VNFTxV4",
            "label": "vnft",
            "type": "t_contract(IVNFT)3320",
            "src": "contracts/VNFTxV4.sol:116"
          },
          {
            "contract": "VNFTxV4",
            "label": "muse",
            "type": "t_contract(IMuseToken)3155",
            "src": "contracts/VNFTxV4.sol:117"
          },
          {
            "contract": "VNFTxV4",
            "label": "addons",
            "type": "t_contract(IERC1155)1302",
            "src": "contracts/VNFTxV4.sol:118"
          },
          {
            "contract": "VNFTxV4",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:120"
          },
          {
            "contract": "VNFTxV4",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1338_storage)",
            "src": "contracts/VNFTxV4.sol:135"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV4.sol:137"
          },
          {
            "contract": "VNFTxV4",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV4.sol:138"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:141"
          },
          {
            "contract": "VNFTxV4",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:142"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:145"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:146"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:147"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:148"
          },
          {
            "contract": "VNFTxV4",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:151"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:152"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:153"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:154"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:156"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:158"
          },
          {
            "contract": "VNFTxV4",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV4.sol:161"
          },
          {
            "contract": "VNFTxV4",
            "label": "cashbackPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:165"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpLostOnBattle",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:185"
          },
          {
            "contract": "VNFTxV4",
            "label": "timesAttacked",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:186"
          },
          {
            "contract": "VNFTxV4",
            "label": "toReceiveCashback",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VNFTxV4.sol:188"
          },
          {
            "contract": "VNFTxV4",
            "label": "alreadyReceivedCashback",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:189"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)3320": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)3155": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1302": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1338_storage)": {
            "label": "mapping(uint256 => struct VNFTxV4.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
    "txHash": "0x083ba7fc7869f7edeec25f6974d0bfbed4c16fe15afda0aadaf6914bfd809d6c"
  }
}
