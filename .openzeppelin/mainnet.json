{
  "manifestVersion": "3.1",
  "impls": {
    "2576de311ef3c85ba4a60e05ae556342448e097e31b93a1a7516761c41593763": {
      "address": "0xaB03D275cc0a02b607992E5FD455Eb41aEd5fa91",
      "txHash": "0x8d3f3b1df52bfbf40d15f485ff25879745fece67e5d3a24183f39edf6050f561",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTx",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTx.sol:110"
          },
          {
            "contract": "VNFTx",
            "label": "vnft",
            "type": "t_contract(IVNFT)2798",
            "src": "contracts/VNFTx.sol:112"
          },
          {
            "contract": "VNFTx",
            "label": "muse",
            "type": "t_contract(IMuseToken)2633",
            "src": "contracts/VNFTx.sol:113"
          },
          {
            "contract": "VNFTx",
            "label": "addons",
            "type": "t_contract(IERC1155)1302",
            "src": "contracts/VNFTx.sol:114"
          },
          {
            "contract": "VNFTx",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:116"
          },
          {
            "contract": "VNFTx",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1338_storage)",
            "src": "contracts/VNFTx.sol:131"
          },
          {
            "contract": "VNFTx",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTx.sol:133"
          },
          {
            "contract": "VNFTx",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTx.sol:134"
          },
          {
            "contract": "VNFTx",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:137"
          },
          {
            "contract": "VNFTx",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:138"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:141"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:142"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:143"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:144"
          },
          {
            "contract": "VNFTx",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:147"
          },
          {
            "contract": "VNFTx",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:148"
          },
          {
            "contract": "VNFTx",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:149"
          },
          {
            "contract": "VNFTx",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:150"
          },
          {
            "contract": "VNFTx",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:152"
          },
          {
            "contract": "VNFTx",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:154"
          },
          {
            "contract": "VNFTx",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTx.sol:157"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)2798": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)2633": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1302": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1338_storage)": {
            "label": "mapping(uint256 => struct VNFTx.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "899f67eb85b5d14e68daa1b62df640f4369da5a2cadf892550be39804c12c2a1": {
      "address": "0xD6Dff95EC9ad8e9E9c409215715B6CBFCBd4c745",
      "txHash": "0x414905d23d4cbba8142b1154b8a9f14ad5cb23640d078677d8fa6d5f25d9f095",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV2.sol:114"
          },
          {
            "contract": "VNFTxV2",
            "label": "vnft",
            "type": "t_contract(IVNFT)13772",
            "src": "contracts/VNFTxV2.sol:116"
          },
          {
            "contract": "VNFTxV2",
            "label": "muse",
            "type": "t_contract(IMuseToken)13607",
            "src": "contracts/VNFTxV2.sol:117"
          },
          {
            "contract": "VNFTxV2",
            "label": "addons",
            "type": "t_contract(IERC1155)10810",
            "src": "contracts/VNFTxV2.sol:118"
          },
          {
            "contract": "VNFTxV2",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:120"
          },
          {
            "contract": "VNFTxV2",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)10846_storage)",
            "src": "contracts/VNFTxV2.sol:135"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV2.sol:137"
          },
          {
            "contract": "VNFTxV2",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV2.sol:138"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:141"
          },
          {
            "contract": "VNFTxV2",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:142"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:145"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:146"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:147"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:148"
          },
          {
            "contract": "VNFTxV2",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:151"
          },
          {
            "contract": "VNFTxV2",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:152"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:153"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:154"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:156"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:158"
          },
          {
            "contract": "VNFTxV2",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV2.sol:161"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)13772": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)13607": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)10810": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)10846_storage)": {
            "label": "mapping(uint256 => struct VNFTxV2.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "3ed455a94009aedd071f5ec9fb71c85f0d350d597c4a826ca89245850335012a": {
      "address": "0x4fEd51889672dcF22EDe6CD2421cF2aD74E1B287",
      "txHash": "0x353f84a72450c387d57cd58b5da0e4f02535160a410da6570dd1ef1e5c10ae11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV3",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV3.sol:114"
          },
          {
            "contract": "VNFTxV3",
            "label": "vnft",
            "type": "t_contract(IVNFT)16392",
            "src": "contracts/VNFTxV3.sol:116"
          },
          {
            "contract": "VNFTxV3",
            "label": "muse",
            "type": "t_contract(IMuseToken)16227",
            "src": "contracts/VNFTxV3.sol:117"
          },
          {
            "contract": "VNFTxV3",
            "label": "addons",
            "type": "t_contract(IERC1155)12818",
            "src": "contracts/VNFTxV3.sol:118"
          },
          {
            "contract": "VNFTxV3",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:120"
          },
          {
            "contract": "VNFTxV3",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)12854_storage)",
            "src": "contracts/VNFTxV3.sol:135"
          },
          {
            "contract": "VNFTxV3",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1129_storage)",
            "src": "contracts/VNFTxV3.sol:137"
          },
          {
            "contract": "VNFTxV3",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1129_storage",
            "src": "contracts/VNFTxV3.sol:138"
          },
          {
            "contract": "VNFTxV3",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV3.sol:141"
          },
          {
            "contract": "VNFTxV3",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV3.sol:142"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:145"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:146"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:147"
          },
          {
            "contract": "VNFTxV3",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:148"
          },
          {
            "contract": "VNFTxV3",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:151"
          },
          {
            "contract": "VNFTxV3",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:152"
          },
          {
            "contract": "VNFTxV3",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:153"
          },
          {
            "contract": "VNFTxV3",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:154"
          },
          {
            "contract": "VNFTxV3",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:156"
          },
          {
            "contract": "VNFTxV3",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV3.sol:158"
          },
          {
            "contract": "VNFTxV3",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV3.sol:161"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)16392": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)16227": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)12818": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)12854_storage)": {
            "label": "mapping(uint256 => struct VNFTxV3.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1129_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1129_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "da420dc98ffecf51e1597240ea3adb41d84d91a301c4c74b24e8035cdb73dd20": {
      "address": "0x4b99FeE2d7Af644AB1Ee08fD9d028B8C5EB41807",
      "txHash": "0xf36e9ff3bdca8e61da982a1d26efe2569cb0f5a109dc31996272a88e94900c43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV4",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV4.sol:114"
          },
          {
            "contract": "VNFTxV4",
            "label": "vnft",
            "type": "t_contract(IVNFT)17663",
            "src": "contracts/VNFTxV4.sol:116"
          },
          {
            "contract": "VNFTxV4",
            "label": "muse",
            "type": "t_contract(IMuseToken)17498",
            "src": "contracts/VNFTxV4.sol:117"
          },
          {
            "contract": "VNFTxV4",
            "label": "addons",
            "type": "t_contract(IERC1155)14022",
            "src": "contracts/VNFTxV4.sol:118"
          },
          {
            "contract": "VNFTxV4",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:120"
          },
          {
            "contract": "VNFTxV4",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)14058_storage)",
            "src": "contracts/VNFTxV4.sol:135"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV4.sol:137"
          },
          {
            "contract": "VNFTxV4",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV4.sol:138"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:141"
          },
          {
            "contract": "VNFTxV4",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:142"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:145"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:146"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:147"
          },
          {
            "contract": "VNFTxV4",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:148"
          },
          {
            "contract": "VNFTxV4",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:151"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:152"
          },
          {
            "contract": "VNFTxV4",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:153"
          },
          {
            "contract": "VNFTxV4",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:154"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:156"
          },
          {
            "contract": "VNFTxV4",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:158"
          },
          {
            "contract": "VNFTxV4",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV4.sol:161"
          },
          {
            "contract": "VNFTxV4",
            "label": "cashbackPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV4.sol:165"
          },
          {
            "contract": "VNFTxV4",
            "label": "hpLostOnBattle",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:185"
          },
          {
            "contract": "VNFTxV4",
            "label": "timesAttacked",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:186"
          },
          {
            "contract": "VNFTxV4",
            "label": "toReceiveCashback",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VNFTxV4.sol:188"
          },
          {
            "contract": "VNFTxV4",
            "label": "alreadyReceivedCashback",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV4.sol:189"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)17663": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)17498": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)14022": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)14058_storage)": {
            "label": "mapping(uint256 => struct VNFTxV4.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "a411a660a6c44f68c8fc1c3c3b2b823cec96b9db6795ab01ab23f5cc52f5d76c": {
      "address": "0xDe0318369550D2588be5C13A7212830795f13e2F",
      "txHash": "0x1a51d6c42718b91e15df609fcea2c9510fbe6f06beb66bf3dc3ad368498743dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV5",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV5.sol:114"
          },
          {
            "contract": "VNFTxV5",
            "label": "vnft",
            "type": "t_contract(IVNFT)17681",
            "src": "contracts/VNFTxV5.sol:116"
          },
          {
            "contract": "VNFTxV5",
            "label": "muse",
            "type": "t_contract(IMuseToken)17516",
            "src": "contracts/VNFTxV5.sol:117"
          },
          {
            "contract": "VNFTxV5",
            "label": "addons",
            "type": "t_contract(IERC1155)15803",
            "src": "contracts/VNFTxV5.sol:118"
          },
          {
            "contract": "VNFTxV5",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:120"
          },
          {
            "contract": "VNFTxV5",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)15839_storage)",
            "src": "contracts/VNFTxV5.sol:135"
          },
          {
            "contract": "VNFTxV5",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV5.sol:137"
          },
          {
            "contract": "VNFTxV5",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV5.sol:138"
          },
          {
            "contract": "VNFTxV5",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:141"
          },
          {
            "contract": "VNFTxV5",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:142"
          },
          {
            "contract": "VNFTxV5",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:145"
          },
          {
            "contract": "VNFTxV5",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:146"
          },
          {
            "contract": "VNFTxV5",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:147"
          },
          {
            "contract": "VNFTxV5",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:148"
          },
          {
            "contract": "VNFTxV5",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:151"
          },
          {
            "contract": "VNFTxV5",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:152"
          },
          {
            "contract": "VNFTxV5",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:153"
          },
          {
            "contract": "VNFTxV5",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:154"
          },
          {
            "contract": "VNFTxV5",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:156"
          },
          {
            "contract": "VNFTxV5",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:158"
          },
          {
            "contract": "VNFTxV5",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV5.sol:161"
          },
          {
            "contract": "VNFTxV5",
            "label": "cashbackPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV5.sol:165"
          },
          {
            "contract": "VNFTxV5",
            "label": "hpLostOnBattle",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:185"
          },
          {
            "contract": "VNFTxV5",
            "label": "timesAttacked",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:186"
          },
          {
            "contract": "VNFTxV5",
            "label": "toReceiveCashback",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/VNFTxV5.sol:188"
          },
          {
            "contract": "VNFTxV5",
            "label": "alreadyReceivedCashback",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:189"
          },
          {
            "contract": "VNFTxV5",
            "label": "petAlreadyReceivedCashback",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV5.sol:198"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)17681": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)17516": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)15803": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)15839_storage)": {
            "label": "mapping(uint256 => struct VNFTxV5.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x3206a055d7d2854aAa7eD8F25F6ab4FF3BF101CB",
    "txHash": "0xbdc5899a1ce270904c071282f11bdb5207a598bcf482b746afb13a26ba98ca2b"
  }
}
